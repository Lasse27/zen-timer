name: Build & Release Electron App (Windows)

on:
  push:
    tags:
      - 'v*.*.*'  # trigger auf Versionstags wie v1.0.0

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    
      # 1. Repository auschecken
      - name: Checkout repository
        uses: actions/checkout@v3



      # 2. Node.js installieren
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20  # Passe Node-Version an, die du benutzt



      # 3. Abhängigkeiten installieren
      - name: Install dependencies
        run: npm ci



      # 4. Electron Builder installieren (falls global nötig)
      - name: Install Electron Builder
        run: npm install -g electron-builder



      # 5. Build
      - name: Build Windows Installer
        run: npm run electron:build


      
      # Build Release Files
      - name: Get app name from package.json
        id: vars
        run: |
          APP_NAME=$(jq -r .name package.json)
          echo "APP_NAME=$APP_NAME" >> $GITHUB_ENV
          echo "VERSION=${GITHUB_REF_NAME}" >> $GITHUB_ENV



      - name: Zip Electron output with name and version
        run: |
          ZIP_NAME="${APP_NAME}-${VERSION}.zip"
          cd dist_electron
          zip -r "../$ZIP_NAME" ./*
          cd ..
          echo "ZIP_NAME=$ZIP_NAME" >> $GITHUB_ENV



      - name: Generate SHA256 checksum
        run: sha256sum $ZIP_NAME > "${ZIP_NAME}.sha256"


      
      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}



      - name: Upload ZIP
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.ZIP_NAME }}
          asset_name: ${{ env.ZIP_NAME }}
          asset_content_type: application/zip



      - name: Upload SHA256
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.ZIP_NAME }}.sha256
          asset_name: ${{ env.ZIP_NAME }}.sha256
          asset_content_type: text/plain
